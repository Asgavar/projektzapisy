
== Zależności ==

* python =  2.6.x
http://www.python.org/
- fedora, debian/ubuntu: python

* pyCrypto = 2.3 z poprawionym bugiem dotyczącym ładowania kluczy
http://fereol.wasilczyk.pl/wiki/_media/downloads/pycrypto.tar.gz
- należy zainstalować ze źródeł:
   1. $ tar -zxf pycrypto.tar.gz
   2. $ cd pycrypto
   3. $ python setup.py build
   4. # python setup.py install
  potrzebny do tego będzie pakiet python-devel, albo python-dev - 
  w zależności od dystrybucji.
  
* django = 1.2.x
http://www.djangoproject.com/
- fedora: Django
- debian/ubuntu: python-django

* lxml >= 2.2.4
http://codespeak.net/lxml/
- fedora, debian/ubuntu: python-lxml

* south >= 0.7 (dołączone w repozytorium projektu)
http://south.aeracode.org/
- fedora: Django-south
- debian/ubuntu: python-django-south

* haystack >= 1.0.1 (dołączone w repozytorium projektu)
http://haystacksearch.org/

* whoosh >= 0.3.18 (dołączone w repozytorium projektu)
http://bitbucket.org/mchaput/whoosh/wiki/Home

* django-mailer >= 0.2.0 (dołączone w repozytorium projektu)
http://github.com/jtauber/django-mailer/

* debug-toolbar >= 0.8.3 (dołączone w repozytorium projektu)
http://github.com/robhudson/django-debug-toolbar


== Uruchomienie (dla developerów) ==


Przed pierwszym uruchomieniem należy przygotować bazę danych
i załadować dane:
$ python manage.py syncdb
$ python manage.py migrate
$ python manage.py loaddata database/fixtures/initial_data.json
$ python manage.py runserver

Teraz można uruchomić serwer:
$ python manage.py runserver

Po uruchomieniu należy ustawić odpowiednią domenę w panelu django (sekcja
Sites), lub bezpośrednio w tabeli django_site.

Więcej na http://iiuwr.indefero.net/p/fereol/page/PrzykladoweDane/

== Konfiguracja ==

* Wyszukiwanie aktualności

Aby poprawnie działała aplikacja aktualności, należy ustawić
uprawnienia odczytu/zapisu dla procesu serwera http do katalogu
wskazywanego przez zmienną HAYSTACK_WHOOSH_PATH.

* Rozsyłanie maili

Maile (rozsyłane np. przy dodawaniu ogłoszeń) są kolejkowane i
wysyłane po uruchomieniu komend manage.py send_mail, manage.py
retry_deferred. Należy np. umieścić wywołanie skryptu w cronie. Przy
rozsyłaniu poczty użyte jest konto skonfigurowane w zmiennych EMAIL_*.


